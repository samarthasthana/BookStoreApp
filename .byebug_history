exit
@combined_results.reject {|b| BookFormat.where("book_id = ? and book_format_type_id = ?", b.id, options[:book_format_type_id]).empty?}
BookFormat.where("book_id = ? and book_format_type_id = ?", 3,5).empty?
BookFormat.where("book_id = ? and book_format_type_id = ?", 3,5).nil?
BookFormat.where("book_id = ? and book_format_type_id = ?", 3,5)
@combined_results
@combined_results.reject {|b| BookFormat.where("book_id = ? and book_format_type_id = ?", b.id, options[:book_format_type_id]).nil?}
@combined_results
exit
((@author_results + @publisher_results + @title_results).uniq).sort_by {|book| book.average_rating}
exit
((@author_results + @publisher_results + @title_results).uniq).sort_by {|book| book.average_rating}
(@author_results + @publisher_results + @title_results).uniq
exit
@authors
Author.where("lower(last_name) = ?", query.downcase).each do |a| @authors += Book.where("author_id = ?",a.id) end
@authors = []
Author.where("lower(last_name) = ?", query.downcase).each do |a| 
Author.where("lower(last_name) = ?", query.downcase).each do |a|
Author.where("lower(last_name) = ?", query.downcase).each |a|
Author.where("lower(last_name) = ?", query.downcase)
exit
next
exit
Author.where("lower(last_name) = ?", query.downcase)
  Author.find(:all ,:conditions => ["#{query}.casecmp(last_name) == 0"])
Author.all
Author.find(:all ,:conditions => ["#{query}.casecmp(last_name) == 0"])
exit
self.where("title like ?","%#{query}%").to_a
self.where("title like ?","%#{query}%")
query
self
exit
next
step
exit
BookReview.all
exit
step
exit
step
next
@reviews
exit
@author.exists
@author.nil?
@author
exit
@author.id
@author.last_name
@author
"#{@author.last_name},#{@author.first_name}"
exit
@author.any?
exit
next
exit
@author.empty?
@author.nil?
@author
